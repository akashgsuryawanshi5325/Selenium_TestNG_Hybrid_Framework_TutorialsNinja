<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-21T15:04:05 IST" name="TutorialsNinja Automation Suite" finished-at="2025-03-21T15:05:56 IST" duration-ms="111002">
    <groups>
    </groups>
    <test started-at="2025-03-21T15:04:05 IST" name="TutorialsNinja Tests" finished-at="2025-03-21T15:05:56 IST" duration-ms="111002">
      <class name="com.tutorialsninja.qa.testcases.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:06 IST" name="setup" finished-at="2025-03-21T15:04:21 IST" duration-ms="15248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAnAccountWithMandatoryFields()[pri:1, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:21 IST" name="verifyRegisteringAnAccountWithMandatoryFields" finished-at="2025-03-21T15:04:22 IST" duration-ms="1664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAnAccountWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:22 IST" name="tearDown" finished-at="2025-03-21T15:04:24 IST" duration-ms="1318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:24 IST" name="setup" finished-at="2025-03-21T15:04:30 IST" duration-ms="5906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyReisterAccountByProvidingAllFields()[pri:2, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:30 IST" name="verifyReisterAccountByProvidingAllFields" finished-at="2025-03-21T15:04:31 IST" duration-ms="1595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyReisterAccountByProvidingAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:31 IST" name="tearDown" finished-at="2025-03-21T15:04:33 IST" duration-ms="1289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:33 IST" name="setup" finished-at="2025-03-21T15:04:40 IST" duration-ms="6991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountWithExistingEmail()[pri:3, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:40 IST" name="verifyRegisteringAccountWithExistingEmail" finished-at="2025-03-21T15:04:41 IST" duration-ms="1041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithExistingEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:41 IST" name="tearDown" finished-at="2025-03-21T15:04:42 IST" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:42 IST" name="setup" finished-at="2025-03-21T15:04:46 IST" duration-ms="4395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccoutWithoutFillingAnyDetails()[pri:4, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:46 IST" name="verifyRegisteringAccoutWithoutFillingAnyDetails" finished-at="2025-03-21T15:04:47 IST" duration-ms="721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccoutWithoutFillingAnyDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@62379589]" started-at="2025-03-21T15:04:47 IST" name="tearDown" finished-at="2025-03-21T15:04:48 IST" duration-ms="1266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsninja.qa.testcases.RegisterTest -->
      <class name="com.tutorialsninja.qa.testcases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]" started-at="2025-03-21T15:05:42 IST" name="setup" finished-at="2025-03-21T15:05:45 IST" duration-ms="3054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchWithValidProduct()[pri:1, instance:com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]" started-at="2025-03-21T15:05:45 IST" name="verifySearchWithValidProduct" finished-at="2025-03-21T15:05:45 IST" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]" started-at="2025-03-21T15:05:45 IST" name="tearDown" finished-at="2025-03-21T15:05:47 IST" duration-ms="1280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]" started-at="2025-03-21T15:05:47 IST" name="setup" finished-at="2025-03-21T15:05:54 IST" duration-ms="7363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchWithInvalidProduct()[pri:2, instance:com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]" started-at="2025-03-21T15:05:54 IST" name="verifySearchWithInvalidProduct" finished-at="2025-03-21T15:05:55 IST" duration-ms="771" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[No Product messagenot displayed expected [abcd] but found [There is no product that matches the search criteria.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: No Product messagenot displayed expected [abcd] but found [There is no product that matches the search criteria.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithInvalidProduct(SearchTest.java:55)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithInvalidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]" started-at="2025-03-21T15:05:55 IST" name="tearDown" finished-at="2025-03-21T15:05:56 IST" duration-ms="1286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySearchWithoutAnyProduct()[pri:3, instance:com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]" started-at="2025-03-21T15:05:56 IST" name="verifySearchWithoutAnyProduct" finished-at="2025-03-21T15:05:56 IST" depends-on-methods="com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithValidProduct, com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithInvalidProduct" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithoutAnyProduct() on instance com.tutorialsninja.qa.testcases.SearchTest@74e52ef6 depends on not successfully finished methods 
[com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithValidProduct() on instance com.tutorialsninja.qa.testcases.SearchTest@74e52ef6
com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithInvalidProduct() on instance com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithoutAnyProduct() on instance com.tutorialsninja.qa.testcases.SearchTest@74e52ef6 depends on not successfully finished methods 
[com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithValidProduct() on instance com.tutorialsninja.qa.testcases.SearchTest@74e52ef6
com.tutorialsninja.qa.testcases.SearchTest.verifySearchWithInvalidProduct() on instance com.tutorialsninja.qa.testcases.SearchTest@74e52ef6]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithoutAnyProduct -->
      </class> <!-- com.tutorialsninja.qa.testcases.SearchTest -->
      <class name="com.tutorialsninja.qa.testcases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:04:49 IST" name="setup" finished-at="2025-03-21T15:04:52 IST" duration-ms="3500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:04:52 IST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSipplier" finished-at="2025-03-21T15:04:53 IST" duration-ms="1100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qatest4321@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:04:53 IST" name="tearDown" finished-at="2025-03-21T15:04:54 IST" duration-ms="1264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:04:54 IST" name="setup" finished-at="2025-03-21T15:05:00 IST" duration-ms="5561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:00 IST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSipplier" finished-at="2025-03-21T15:05:02 IST" duration-ms="1822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qatest43210@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[43210]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:02 IST" name="tearDown" finished-at="2025-03-21T15:05:03 IST" duration-ms="1260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:03 IST" name="setup" finished-at="2025-03-21T15:05:11 IST" duration-ms="7581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:11 IST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSipplier" finished-at="2025-03-21T15:05:12 IST" duration-ms="1307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qatest432101@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[432101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:12 IST" name="tearDown" finished-at="2025-03-21T15:05:13 IST" duration-ms="1299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:13 IST" name="setup" finished-at="2025-03-21T15:05:20 IST" duration-ms="6675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:2, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:20 IST" name="verifyLoginWithInvalidCredentials" finished-at="2025-03-21T15:05:21 IST" duration-ms="935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:21 IST" name="tearDown" finished-at="2025-03-21T15:05:22 IST" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:22 IST" name="setup" finished-at="2025-03-21T15:05:27 IST" duration-ms="4502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidEmailAndValidPassword()[pri:3, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:27 IST" name="verifyLoginWithInvalidEmailAndValidPassword" finished-at="2025-03-21T15:05:27 IST" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:27 IST" name="tearDown" finished-at="2025-03-21T15:05:29 IST" duration-ms="1269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:29 IST" name="setup" finished-at="2025-03-21T15:05:32 IST" duration-ms="3463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidEmailAndInvalidPassword()[pri:4, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:32 IST" name="verifyLoginWithValidEmailAndInvalidPassword" finished-at="2025-03-21T15:05:33 IST" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:33 IST" name="tearDown" finished-at="2025-03-21T15:05:34 IST" duration-ms="1272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:34 IST" name="setup" finished-at="2025-03-21T15:05:39 IST" duration-ms="5092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithoutProvidingCredentials()[pri:5, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:39 IST" name="verifyLoginWithoutProvidingCredentials" finished-at="2025-03-21T15:05:40 IST" duration-ms="935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithoutProvidingCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@7eac9008]" started-at="2025-03-21T15:05:40 IST" name="tearDown" finished-at="2025-03-21T15:05:42 IST" duration-ms="1285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsninja.qa.testcases.LoginTest -->
    </test> <!-- TutorialsNinja Tests -->
  </suite> <!-- TutorialsNinja Automation Suite -->
</testng-results>
